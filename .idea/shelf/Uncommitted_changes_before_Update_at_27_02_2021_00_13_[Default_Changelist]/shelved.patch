Index: client.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nfrom Python.network.network import Network\r\nfrom Python.conf import settings\r\nfrom Python.pygame import setup as f\r\nfrom Python.network import network as n\r\n\r\n\"\"\"\r\nAffichage :\r\n    Menu de chargement \r\n    \r\n    \r\nProcess:\r\n    Verifier les fichiers du jeu\r\n    Download fichié Maj / reinstall si check sum =/= d'habitude? \r\n    Chargement des paramètres de jeu.\r\n    \r\n\"\"\"\r\n\r\n\r\ndef loading():\r\n    # Check intégrité jeu (ac)\r\n    # Download parties du jeu online\r\n    #\r\n    # Si premiere connexion, enregistré pseudo.\r\n    #\r\n    #\r\n    reglages = settings.Settings()\r\n    global window_width\r\n    window_width = reglages.get_window_width()\r\n    global window_height\r\n    window_height = reglages.get_window_height()\r\n    global pseudo\r\n    pseudo = reglages.get_pseudo()\r\n    # Init Pygame\r\n    pygame.font.init()\r\n\r\n\r\ndef reglage():\r\n    screen.fill(0)\r\n    running = True\r\n    while running:\r\n        Fermer = f.Center_texte(\"Y en a pas !\", window_width / 2, window_width * 0.30,\r\n                                (0, 0, 255),\r\n                                \"ComicSansMS\", 40)\r\n        text, text_rect = Fermer.write(screen)\r\n        btn = f.Button_center(\"Menu (retour)\", window_width / 2, window_height * 0.6, 200, 70, (255, 155, 0))\r\n        btn.draw(screen)\r\n        screen.blit(text, text_rect)\r\n        pygame.display.flip()\r\n        for event in pygame.event.get():\r\n            \"\"\"Ferme le prgm en cas de fermeture de la fenetre.\"\"\"\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                pos = pygame.mouse.get_pos()\r\n                if btn.click(pos):\r\n                    running = False\r\n\r\n\r\n\"\"\"\r\nAffichage:\r\n    au milieu bouton de jeu \r\n        pseudo\r\n        \r\n        Solo\r\n        \r\n        Multi\r\n            \r\n            credit défilant.\r\n\r\nprocess:\r\n    wait\r\n\"\"\"\r\n\r\n\r\ndef main_menu():\r\n    screen.fill(0)\r\n    pygame.display.set_caption(\"Menu\")\r\n    draw = 0\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            \"\"\"Ferme le prgm en cas de fermeture de la fenetre.\"\"\"\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n        Message_Bienvenue = f.Center_texte(\"Citadelle\".upper(), window_width / 2, window_height * 0.10, (0, 255, 0),\r\n                                           \"ComicSansMS\", 50)\r\n        text, text_rect = Message_Bienvenue.write(screen)\r\n        \"\"\"\r\n        if pseudo == \"\":\r\n            message = \"Entre ton pseudo\"\r\n            pseudo = f.TextBoxInput(Pseudo_InputBox)\r\n        else:\r\n            message = pseudo\r\n        \"\"\"\r\n        Pseudo_InputBox = f.makeTextBox(window_width / 2, window_height * 0.70, 300, 0, \"message\")\r\n        #f.showTextBox(Pseudo_InputBox)\r\n        btns = [f.Button_center(\"Solo\", window_width * 0.2, window_height / 2, 150, 100, (0, 0, 255)),\r\n                f.Button_center(\"Multi\", window_width * 0.8, window_height / 2, 150, 100, (0, 0, 255)),\r\n                f.Button_center(\"reglage\", window_width * 0.9, window_height * 0.9, 150, 100, (0, 0, 0)),\r\n                f.Button_center(\"FERMER\", window_width * 0.9, window_height * 0.1, 150, 100, (0, 0, 0))]\r\n        if draw != True:\r\n\r\n            screen.blit(text, text_rect)\r\n            for btn in btns:\r\n                btn.draw(screen)\r\n\r\n            draw = True\r\n\r\n        pygame.display.flip()\r\n        for event in pygame.event.get():\r\n            \"\"\"\r\n            DEBUGG\r\n            Connaitre la position c'est un plus..\r\n            \"\"\"\r\n            if event.type == pygame.MOUSEMOTION:\r\n                # print(pygame.mouse.get_pos())\r\n                pass\r\n            \"\"\"Ferme le prgm en cas de fermeture de la fenetre.\"\"\"\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                pos = pygame.mouse.get_pos()\r\n                for btn in btns:\r\n                    if btn.click(pos):\r\n                        running = False\r\n                        clique = btn\r\n\r\n    if clique.text == \"Solo\":\r\n        Solo()\r\n    elif clique.text == \"Multi\":\r\n        Multijoueurs()\r\n    elif clique.text == \"reglage\":\r\n        reglage()\r\n    elif clique.text == \"FERMER\":\r\n        screen.fill(0)\r\n        Fermer = f.Center_texte(\"Merci d'avoir joué !\", window_width / 2, window_width * 0.30,\r\n                                (0, 255, 0),\r\n                                \"ComicSansMS\", 50)\r\n        text, text_rect = Fermer.write(screen)\r\n        screen.blit(text, text_rect)\r\n        pygame.display.flip()\r\n        pygame.time.delay(1500)\r\n        pygame.display.quit()\r\n        quit()\r\n    pass\r\n\r\n\r\n\"\"\"\r\nGestion Mathieu\r\n\"\"\"\r\n\r\n\r\ndef Solo():\r\n    screen.fill(0)\r\n    Fermer = f.Center_texte(\"Bientôt un Solo !\", window_width / 2, window_width * 0.30,\r\n                            (0, 255, 0),\r\n                            \"ComicSansMS\", 50)\r\n    text, text_rect = Fermer.write(screen)\r\n    screen.blit(text, text_rect)\r\n    pygame.display.flip()\r\n    pygame.time.delay(1500)\r\n\r\n\r\n\"\"\"\r\nConception        Mathieu\r\n\r\nGestion Network   Maxime \r\n\r\n\"\"\"\r\n\r\n\r\ndef Multijoueurs():\r\n    \"\"\"\r\n    print(\"   _   _              _   _       \")\r\n    print(\"  / \\ / \\     _   _  | | | |_  (_)\")\r\n    print(\" /       \\   | | | | | | | __| | |\")\r\n    print(\"/ / \\ / \\ \\  | |_| | | | | |_ || |\")\r\n    print(\"\\ /     \\ /   \\__,_| |_|  \\__| |_|\")\r\n    \"\"\"\r\n    pygame.display.set_caption(\"Citadelle | Multijoueurs\")\r\n    screen.fill(0)\r\n    pygame.display.flip()\r\n    Lobby = True\r\n    Network = n.Network()\r\n    answer = Network.getP()\r\n    print(\"result connexion : \"+answer)\r\n    while running:\r\n        pygame.time.delay(1000)\r\n        answer = Network.Get()\r\n        print(f\"srv :{answer}\")\r\n\r\n    connexion = Network.getP()\r\n    print(type(connexion))\r\n    print(connexion)\r\n    if not connexion :\r\n        error_message_titre = f.Center_texte(f\"ERREUR\",\r\n                                             window_width / 2, window_width * 0.20,\r\n                                             (255, 0, 0),\r\n                                             \"Arial\", 60)\r\n        error_message = f.Center_texte(f\"Nos serveurs rencontres des erreurs.\",\r\n                                       window_width / 2, window_width * 0.30,\r\n                                       (255, 255, 255),\r\n                                       \"Arial\", 20)\r\n        text, text_rect = error_message_titre.write(screen)\r\n        screen.blit(text, text_rect)\r\n        text, text_rect = error_message.write(screen)\r\n        screen.blit(text, text_rect)\r\n        pygame.display.flip()\r\n        pygame.time.delay(2500)\r\n        main_menu()\r\n    else:\r\n        connexion = connexion.split('|')\r\n    if connexion[0] == \"Ok\":\r\n        \"\"\"\r\n        Connexion au serveur réussi, vous etes dans la partie.\r\n        \"\"\"\r\n    else:\r\n        print(connexion[0])\r\n        print(connexion[1])\r\n        error_message = f.Center_texte(f\"Nous avons rencontré une erreur. {connexion[1]}\",\r\n                                       window_width / 2, window_width * 0.10,\r\n                                       (255, 255, 255),\r\n                                       \"Arial\", 20)\r\n        error_message.write(screen)\r\n        screen.blit(text, text_rect)\r\n        pygame.display.flip()\r\n        pygame.time.delay(1500)\r\n        main_menu()\r\n\r\n    print(f\"srv :{connexion}\")\r\n    pseudo = connexion[1]\r\n    if connexion[2] == \"1\":\r\n        \"\"\"\r\n        regarde si l'option 2 de connexion est a True, si oui alors le joueur est l'hote de la partie.\r\n        \"\"\"\r\n        host = True\r\n        host_message = f.Center_texte(\"Vous êtes l'hote, c'est vous qui règler les paramètres de la partie !\",\r\n                                      window_width / 2, window_width * 0.10,\r\n                                      (255, 255, 255),\r\n                                      \"Arial\", 20)\r\n        text, text_rect = host_message.write(screen)\r\n        screen.blit(text, text_rect)\r\n        start = f.Button_center(\"Start\", window_width * 0.2, window_height / 2, 150, 100, (0, 255, 0))\r\n        start.draw(screen)\r\n\r\n    draw = False\r\n    Old_nb_joueurs = 0\r\n\r\n    while Lobby:\r\n        for event in pygame.event.get():\r\n            \"\"\"Ferme le prgm en cas de fermeture de la fenetre.\"\"\"\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.MOUSEBUTTONDOWN and host:\r\n                pos = pygame.mouse.get_pos()\r\n                if start.click(pos):\r\n                    Network.send(\"StartGame\")\r\n\r\n\r\n        if draw == False:\r\n            pygame.display.flip()\r\n\r\n        #pseudo\r\n        PlayerInfo = Network.send(\"PlayerInfo\").split(\"|\")\r\n        Nombre_de_joueurs = PlayerInfo[1]\r\n\r\n        Nombre_de_joueurs_Max = PlayerInfo[2]\r\n\r\n\r\n\r\n        if Old_nb_joueurs != Nombre_de_joueurs:\r\n            if Nombre_de_joueurs == 1:\r\n                texte = \"Joueur : \" + str(Nombre_de_joueurs) + \" / \" + str(Nombre_de_joueurs_Max)\r\n            else:\r\n                texte = \"Joueurs : \" + str(Nombre_de_joueurs) + \" / \" + str(Nombre_de_joueurs_Max)\r\n            Player_Info_Message = f.Center_texte(\"\",\r\n                                                 window_width * 0.2, window_width * 0.2,\r\n                                                 (255, 255, 255),\r\n                                                 \"Arial\", 15)\r\n            Player_Info_Message.text = texte\r\n            Player_Info_Message.modifier(texte)\r\n            text, text_rect = Player_Info_Message.write(screen)\r\n\r\n            screen.blit(text, text_rect)\r\n            draw = False\r\n        Old_nb_joueurs = Nombre_de_joueurs\r\n\r\n        if Network.send(\"IsGameStarted\") == \"Yes\":\r\n            print(\"lancement de la partie !\")\r\n\r\n            Lobby = False\r\n            InGame = True\r\n\r\n    while InGame:\r\n\r\n        screen.fill(0)\r\n        InGameMessage = f.Center_texte(\"\",\r\n                                             window_width * 0.2, window_width * 0.2,\r\n                                             (255, 255, 255),\r\n                                             \"Arial\", 15)\r\n        InGameMessage.text = \"Vous etes en jeux !!\\nConnaissez vous les règles ?\"\r\n        text, text_rect = Player_Info_Message.write(screen)\r\n        screen.blit(text, text_rect)\r\n        pygame.display.flip()\r\n\r\n\"\"\"\r\n __  _                _   \r\n/ _\\| |_  __ _  _ __ | |_ \r\n\\ \\ | __|/ _` || '__|| __|\r\n_\\ \\| |_| (_| || |   | |_ \r\n\\__/ \\__|\\__,_||_|    \\__|\r\n\"\"\"\r\nloading()\r\n\r\nscreen = pygame.display.set_mode((window_width, window_height))\r\nwhile True:\r\n    main_menu()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client.py b/client.py
--- a/client.py	(revision d8a19865ef5e4740caf44d5e7f083bd2eec62f42)
+++ b/client.py	(date 1614381170000)
@@ -183,12 +183,6 @@
     pygame.display.flip()
     Lobby = True
     Network = n.Network()
-    answer = Network.getP()
-    print("result connexion : "+answer)
-    while running:
-        pygame.time.delay(1000)
-        answer = Network.Get()
-        print(f"srv :{answer}")
 
     connexion = Network.getP()
     print(type(connexion))
@@ -316,3 +310,4 @@
 screen = pygame.display.set_mode((window_width, window_height))
 while True:
     main_menu()
+    # Multijoueurs()
